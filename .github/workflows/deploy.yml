name: Deploy Plugin

permissions:
  contents: write
  packages: write
  pull-requests: read

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.github/**'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Validate PHP syntax
      run: find . -name "*.php" -exec php -l {} \;
    
    - name: Check file structure
      run: |
        test -f homepage-elementor.php
        test -d widgets
        test -d assets

  version:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Get current version
      id: current
      run: |
        VERSION=$(grep "Version:" homepage-elementor.php | head -1 | awk '{print $3}')
        echo "current_version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Increment version
      id: version
      run: |
        CURRENT="${{ steps.current.outputs.current_version }}"
        IFS='.' read -ra PARTS <<< "$CURRENT"
        PATCH=$((${PARTS[2]} + 1))
        NEW_VERSION="${PARTS[0]}.${PARTS[1]}.$PATCH"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: Update version in files
      run: |
        sed -i "s/Version: .*/Version: ${{ steps.version.outputs.new_version }}/" homepage-elementor.php
        sed -i "s/new Homepage_Elementor_Updater(__FILE__, '[^']*')/new Homepage_Elementor_Updater(__FILE__, '${{ steps.version.outputs.new_version }}')/" homepage-elementor.php
        sed -i "s/## Version .*/## Version ${{ steps.version.outputs.new_version }}/" README.md
    
    - name: Commit version bump
      run: |
        git config --local user.email "kamaltz@users.noreply.github.com"
        git config --local user.name "kamaltz"
        git add .
        git commit -m "Bump version to ${{ steps.version.outputs.new_version }} [skip ci]"
        git tag "v${{ steps.version.outputs.new_version }}"
        git push origin main
        git push origin --tags

  build:
    needs: version
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    
    - name: Create plugin zip
      run: |
        zip -r homepage-elementor-${{ needs.version.outputs.new_version }}.zip . \
          -x "*.git*" "*.github*" "*.md" "*.txt" "node_modules/*" "scripts/*"
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.version.outputs.new_version }}
        release_name: Release v${{ needs.version.outputs.new_version }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./homepage-elementor-${{ needs.version.outputs.new_version }}.zip
        asset_name: homepage-elementor-${{ needs.version.outputs.new_version }}.zip
        asset_content_type: application/zip

  notify:
    needs: [version, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify WordPress sites
      run: |
        curl -X POST "${{ secrets.WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -d '{"version": "${{ needs.version.outputs.new_version }}", "repo": "${{ github.repository }}"}'