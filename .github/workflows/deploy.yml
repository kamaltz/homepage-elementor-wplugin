name: Deploy Plugin

permissions:
  contents: write
  packages: write
  pull-requests: read
  actions: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Validate PHP syntax
      run: find . -name "*.php" -exec php -l {} \;
    
    - name: Check file structure
      run: |
        test -f homepage-elementor.php
        test -d widgets
        test -d assets

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Get current version and increment
      id: version
      run: |
        VERSION=$(grep "Version:" homepage-elementor.php | head -1 | awk '{print $3}')
        IFS='.' read -ra PARTS <<< "$VERSION"
        PATCH=$((${PARTS[2]} + 1))
        NEW_VERSION="${PARTS[0]}.${PARTS[1]}.$PATCH"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $NEW_VERSION"
    
    - name: Update version in build files
      run: |
        sed -i "s/Version: .*/Version: ${{ steps.version.outputs.new_version }}/" homepage-elementor.php
        sed -i "s/new Homepage_Elementor_Updater(__FILE__, '[^']*')/new Homepage_Elementor_Updater(__FILE__, '${{ steps.version.outputs.new_version }}')/" homepage-elementor.php
    
    - name: Create plugin zip
      run: |
        zip -r homepage-elementor-${{ steps.version.outputs.new_version }}.zip . \
          -x "*.git*" "*.github*" "*.md" "*.txt" "node_modules/*" "scripts/*"
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.new_version }}
        name: Release v${{ steps.version.outputs.new_version }}
        files: homepage-elementor-${{ steps.version.outputs.new_version }}.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify WordPress sites
      if: ${{ secrets.WEBHOOK_URL != '' }}
      run: |
        curl -X POST "${{ secrets.WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -d '{"version": "${{ needs.build.outputs.new_version }}", "repo": "${{ github.repository }}"}'